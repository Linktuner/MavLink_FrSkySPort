{"name":"Mavlink frsky telemetry sport","tagline":"","body":"MavLink_FrSkySPort\r\n==================\r\nThis is a modified version of the mavlink to frsky s.port code found here:\r\nhttp://diydrones.com/forum/topics/amp-to-frsky-x8r-sport-converter\r\n\r\nIt's based on the official 1.3 version.\r\n\r\nYou'll need a Flight Controller that outputs Mavlink messages (like an APM 2.x or the PixHawk), a compatible X series receiver from FrSky that can output Smart Port telemetry data, like the X8R, and a Teensy 3.1 micro controller. And a FrSky radio transmitter (like the Taranis X9D).\r\n\r\nIt's assumed you know how to configure your Taranis X9D to receive telemetry data.\r\n\r\nAll testing is being done on a PixHawk flight controller, a Teensy 3.1, a X8R receiver, and a Taranis Radio Tx. \r\n\r\nAs the projects that serve as base for this are constantly evolving it is expected that something might become in-operational with newer versions of either OpenTX or APM.\r\n\r\nCurrent (Sept, 22nd, 2014) versions of OpenTX is 2.0.12 and from APM 3.1.5 (Arducopter)\r\n\r\nChanges:\r\n\r\n- Acc X/Y/Z reports the average vibrations (difference between max/min) instead of actual accelerometer values.\r\n- Reports gps-speed instead of hud-speed.\r\n- Change how the code responds to tx telemetry requests. This fixes the missing cell/cells in the latest open-tx versions.\r\n- Updated the cell detection to minimize the risk of detecting to many cells (unless the battery is low upon connection) and changing the cell count inflight when the battery voltage drops.\r\n- Changed the averaging for voltage/current to be more accurate to the voltage/current fluctuations. Hoping of increasing the accuracy of the mAh-counter. Use FAS as both voltage/current source.\r\n- Delays sending the voltage/current until the voltage reading through mavlink has stabilized. This should minimize the false low battery-warnings upon model powerup.\r\n- GPS hdop on A2\r\n- Temp2 contains both arming status (armed if the value is uneven) and status message number if the text received through mavlink was recognized.\r\n\r\nLua scripts: Arducopter_Status\r\n\r\nMixer scripts:\r\n\r\nApmTelem.lua:\r\nThis script configures A2 for usage as hdop and exports arming-status as an output. This status can be used to for example control a timer.\r\nIt also publishes a set of methods that can be used by other scripts.\r\n\r\nApmSounds.lua: \r\nThis is a mixer script that announces (plays a soundfile) when the flightmode changes. Some flightmodes (auto-modes) will be repeated at a given intervall. \r\n\r\n\r\nLua telemetry screens:\r\n\r\ntelem1.lua: \r\nShows status of different parameters received through mavlink. \r\nSome of this parameters are current flightmode, gps status, battery status, current consumption and power usage.\r\nIt also displays (briefly) any status messages received from ardupilot.\r\n\r\ntelem2.lua:\r\nShows a log with received status messages from ardupilot. ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}